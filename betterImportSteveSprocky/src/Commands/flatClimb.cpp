// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "flatClimb.h"

flatClimb::flatClimb() {
	// Use requires() here to declare subsystem dependencies
	// eg. requires(chassis);
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::climberAngle);

	currentAngle = 0;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}

// Called just before this Command runs the first time
void flatClimb::Initialize() {
	
}

// Called repeatedly when this Command is scheduled to run
void flatClimb::Execute() {
	
	currentAngle = Robot::climberAngle->GetAngle();//angle is returned in degrees
	angleError = currentAngle - targetAngle;		//target angle which is declared in flatClimb.h is 95 degrees because down is 0
	angleAdjustment = angleError * gain;			//gain is 0.008
	
	power = angleAdjustment;
	
	if (power > 1) {
		power = 1;
	} 
	
	Robot::climberAngle->Move(power);
	
	SmartDashboard::PutNumber("CLIMBER power:", power);
	SmartDashboard::PutNumber("CLIMBER current angle:", currentAngle);
	SmartDashboard::PutNumber("CLIMBER target Angle:", targetAngle);



}

// Make this return true when this Command no longer needs to run execute()
bool flatClimb::IsFinished() {
	return (Robot::climberAngle->GetAngle() <= targetAngle);
}

// Called once after isFinished returns true
void flatClimb::End() {
	Robot::climberAngle->Move(0.0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void flatClimb::Interrupted() {
	End();
}
